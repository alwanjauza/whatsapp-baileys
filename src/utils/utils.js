const sharp = require("sharp");
const moment = require("moment");

async function convertToSticker(buffer) {
  return await sharp(buffer)
    .resize(512, 512, { fit: "inside" })
    .webp()
    .toBuffer();
}

async function menuInfo(msg, from, sock) {
  try {
    await sock.sendMessage(from, {
      react: {
        text: "‚è≥",
        key: msg.key,
      },
    });

    await sock.sendMessage(from, {
      text: `‚ï≠‚îÄ‚îÄ‚îÄ„Äî ‚ùì BANTUAN BOT „Äï‚îÄ‚îÄ‚îÄ
‚îä üìÑ Perintah yang tersedia:
‚îä 
‚îä üîπ #menu ‚Üí Tampilkan menu
‚îä üîπ #sticker ‚Üí Kirim gambar dengan caption #sticker
‚îä üîπ #stock ‚Üí Lihat stok produk
‚îä üîπ #buynow ‚Üí Beli produk
‚îä üîπ #remind me in ‚Üí Atur pengingat
‚îä
‚îä ‚ùì Butuh bantuan? Hubungi admin +6282141083589
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

Created by: @alwanjauza`,
    });
    await sock.sendMessage(from, {
      react: {
        text: "‚úÖ",
        key: msg.key,
      },
    });
  } catch (err) {
    console.error("‚ùå Gagal mengirim informasi menu:", err);
  }
}

async function sendStockInfo(msg, from, sock) {
  try {
    await sock.sendMessage(from, {
      react: {
        text: "‚è≥",
        key: msg.key,
      },
    });

    await sock.sendMessage(from, {
      text: `‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ„Äî BOT AUTO ORDER „Äï‚îÄ‚îÄ
‚îä„Éª Untuk membeli Ketik Perintah Berikut
‚îä„Éª #buynow Kode(spasi)JumlahAkun
‚îä„Éª Ex: #buynow spo3b 1
‚îä„Éª Pastikan Code & Jumlah Akun di Ketik dengan benar
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

Created by: @alwanjauza`,
    });

    await sock.sendMessage(from, {
      react: {
        text: "‚úÖ",
        key: msg.key,
      },
    });
  } catch (err) {
    console.error("‚ùå Gagal mengirim informasi stocks:", err);
  }
}

async function handleReminderCommand(text, msg, from, sock) {
  await sock.sendMessage(from, {
    react: {
      text: "‚åõ",
      key: msg.key,
    },
  });

  const match = text.match(
    /#remind me in (\d+)\s*(seconds?|minutes?|hours?|days?) to (.+)/i
  );

  if (!match) {
    await sock.sendMessage(from, {
      text: `‚ï≠‚îÄ„Äî ‚ö†Ô∏è FORMAT TIDAK VALID „Äï‚îÄ
‚îä üí¨ Perintah tidak dikenali.
‚îä Contoh format benar:
‚îä #remind me in 10 minutes to tidur
‚îä
‚îä Silakan coba lagi.
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ`,
    });

    await sock.sendMessage(from, {
      react: {
        text: "‚ùå",
        key: msg.key,
      },
    });

    return;
  }

  const duration = parseInt(match[1], 10);
  const unit = match[2].toLowerCase();
  const reminderText = match[3];
  const validUnits = {
    second: 1000,
    minute: 60 * 1000,
    hour: 60 * 60 * 1000,
    day: 24 * 60 * 60 * 1000,
  };

  let unitKey = Object.keys(validUnits).find((key) => unit.includes(key));
  if (!unitKey) {
    await sock.sendMessage(from, {
      text: `‚ö†Ô∏è Unit waktu tidak dikenali. Gunakan: seconds, minutes, hours, days.`,
    });
    return;
  }

  const delay = duration * validUnits[unitKey];
  const reminderTime = moment().add(delay, "milliseconds");

  await sock.sendMessage(from, {
    text: `‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ„Äî üîî PENGINGAT AKTIF „Äï‚îÄ‚îÄ‚îÄ‚îÄ
‚îä ‚è∞ Reminder berhasil di-set!
‚îä üí¨ Akan mengingatkan dalam ${duration} ${unit}.
‚îä üìù Pesan: "${reminderText}"
‚îä üìÜ Waktu: ${reminderTime.format("LLLL")}
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ`,
  });

  setTimeout(async () => {
    try {
      await sock.sendMessage(from, {
        text: `‚è∞ Pengingat: ${reminderText}`,
      });
    } catch (err) {
      console.error("Gagal mengirim pengingat:", err);
    }
  }, delay);

  await sock.sendMessage(from, {
    react: {
      text: "‚úÖ",
      key: msg.key,
    },
  });
}

module.exports = {
  convertToSticker,
  menuInfo,
  sendStockInfo,
  handleReminderCommand,
};
